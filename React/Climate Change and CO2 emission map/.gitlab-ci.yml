image: node:18.18-bullseye-slim

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "staging"

stages:
  - lint
  - build
  - test
  - deploy

default:
  cache:
    key:
      prefix: $CI_COMMIT_REF_NAME
      files:
        - server/package-lock.json
        - client/package-lock.json
    paths:
      - server/.npm/
      - client/.npm/
  before_script:
    - cd server && npm ci --cache .npm --prefer-offline && cd ../client && npm ci --cache .npm --prefer-offline && cd ..

lint-server:
  stage: lint
  script:
    - cd server && ./node_modules/.bin/eslint --ext js,mjs,cjs .
  allow_failure: false

lint-client:
  stage: lint
  script:
    - cd client && ./node_modules/eslint/bin/eslint.js --ext js,jsx,mjs,cjs .
  allow_failure: false

build-frontend:
  stage: build
  script:
    - cd client && npm run build
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/
  artifacts:
    expire_in: 1 week
    when: on_success
    paths:
      - client/build

build-backend:
  stage: build
  script:
    - cd server && npm install
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/
  only:
    refs:
      - main
      - master
      - staging
  artifacts:
    expire_in: 1 week
    when: on_success
    paths:
      - server

test:
  stage: test
  dependencies:
    - build-backend
  script:
    - cd server && npm run test
  allow_failure: false

build-app-archive:
  stage: deploy
  variables:
    RELEASE_FILE: release-$CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA.tar.gz
  dependencies:
    - build-frontend
  rules:
    - if: '$CI_COMMIT_TAG'
  before_script:
    - cd server && npm ci --omit=dev
    - cd ..
  script:
    - tar -zcf $RELEASE_FILE -C . server client/build client/package* ./package.json
  artifacts:
    expire_in: 1 week
    when: on_success
    paths:
      - $RELEASE_FILE